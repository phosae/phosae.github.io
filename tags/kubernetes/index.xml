<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on ZengXu&#39;s BLOG</title>
    <link>https://www.zeng.dev/tags/kubernetes/</link>
    <description>Recent content in kubernetes on ZengXu&#39;s BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Jun 2023 16:09:27 +0800</lastBuildDate><atom:link href="https://www.zeng.dev/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>慎重选用 Runtime 类框架开发 K8s apiserver</title>
      <link>https://www.zeng.dev/post/2023-k8s-apiserver-avoid-using-runtime/</link>
      <pubDate>Sun, 18 Jun 2023 16:09:27 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-k8s-apiserver-avoid-using-runtime/</guid>
      <description>apiserver-runtime 本身也是基于 k8s.io/apiserver 提供增强。当项目需要灵活定制策略时，就不可避免需要直接使用底层库。结果是，开发者除了要熟悉 k8s.io 库，还需要再学一套框架。那为什么不从一开始直接使用 k8s.io/apiserver？</description>
    </item>
    
    <item>
      <title>使用 library 实现 K8s apiserver</title>
      <link>https://www.zeng.dev/post/2023-k8s-apiserver-using-library/</link>
      <pubDate>Wed, 07 Jun 2023 16:11:19 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-k8s-apiserver-using-library/</guid>
      <description>理解 K8s apiserver 的最好方式就是自己动手实现同款</description>
    </item>
    
    <item>
      <title>最不厌其烦的 K8s 代码生成教程</title>
      <link>https://www.zeng.dev/post/2023-k8s-api-codegen/</link>
      <pubDate>Mon, 05 Jun 2023 18:08:17 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-k8s-api-codegen/</guid>
      <description>彻底而全面的梳理，甚至提供了复制即用的脚本和镜像&amp;hellip;</description>
    </item>
    
    <item>
      <title>搞懂 K8s apiserver aggregation</title>
      <link>https://www.zeng.dev/post/2023-k8s-apiserver-aggregation-internals/</link>
      <pubDate>Wed, 31 May 2023 18:46:31 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-k8s-apiserver-aggregation-internals/</guid>
      <description>全图文展示 apiserver aggregation 原理，彻底搞懂 APIService 和 custom apiserver 认证授权 (authn, authz)</description>
    </item>
    
    <item>
      <title>实现一个极简 K8s apiserver</title>
      <link>https://www.zeng.dev/post/2023-k8s-apiserver-from-scratch/</link>
      <pubDate>Fri, 26 May 2023 07:43:51 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-k8s-apiserver-from-scratch/</guid>
      <description>本文实现了一个符合 Kubernetes REST 风格的极简 apiserver，代码量只有 500 行左右。无论是单独运行还是集成到 K8s 集群，它都支持 kubectl 增删改查操作。动手把玩这个 apiserver，可以很好理解 K8s apiserver aggregation 原理，以及 kubectl 与 apiserver 的交互机制</description>
    </item>
    
    <item>
      <title>K8s CustomResourceDefinitions (CRD) 原理</title>
      <link>https://www.zeng.dev/post/2023-k8s-api-by-crd/</link>
      <pubDate>Fri, 19 May 2023 10:09:09 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-k8s-api-by-crd/</guid>
      <description>K8s CustomResourceDefinition (CRD) 为使用者提供了开箱即用的 REST API 拓展能力。使用方只需创建一份 CRD 声明，kube-apiserver 就会自动提供一套成熟的 HTTP REST API，并直接将 Custom Resources 存储到背后存储（通常是 etcd）中。本文由浅入深，先展示了 CRD 的基本使用方式、kubectl 与对应 Custom API 模块的交互原理，再深入探究 CRD 在 kube-apiserver 内部的实现原理，最后对其特性的利弊做了总结</description>
    </item>
    
    <item>
      <title>Enable Kubelet Serving Certificates in Kubernetes Setup by Kubeadmin</title>
      <link>https://www.zeng.dev/post/2023-kubeadm-enable-kubelet-serving-certs/</link>
      <pubDate>Sat, 22 Apr 2023 10:01:25 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-kubeadm-enable-kubelet-serving-certs/</guid>
      <description>Setting up a Kubernetes cluster with a newly deployed metrics server often results in the following error message: &lt;code&gt;Failed to scrape node, err=Get https://172.18.0.3:10250/metrics/resource: x509: cannot validate certificate for 172.18.0.3 because it doesn&#39;t contain any IP SANs node=kind-worker&lt;/code&gt;. This can be frustrating. In this post, I will demonstrate how to solve this problem in KinD.</description>
    </item>
    
    <item>
      <title>Terminate Container in Responsive and Graceful Way</title>
      <link>https://www.zeng.dev/post/2023-handle-container-terminating/</link>
      <pubDate>Mon, 27 Feb 2023 08:00:59 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2023-handle-container-terminating/</guid>
      <description>Running application in container as PID 1 is quite common today, shutdown application responsively and gracefully is hard. This article show how PID 1 behave in container and provides serveral ways to make container shutdown as we want.</description>
    </item>
    
    <item>
      <title>Kubernetes admission webhook server 开发教程</title>
      <link>https://www.zeng.dev/post/2021-denyenv-validating-admission-webhook/</link>
      <pubDate>Sun, 08 Aug 2021 21:11:28 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2021-denyenv-validating-admission-webhook/</guid>
      <description>How to implement a Kubernetes validating admission webhook</description>
    </item>
    
    <item>
      <title>各种容器运行时都解决了什么问题</title>
      <link>https://www.zeng.dev/post/2020-container-runtimes/</link>
      <pubDate>Wed, 01 Jul 2020 17:31:56 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2020-container-runtimes/</guid>
      <description>容器运行时原理小综述</description>
    </item>
    
    <item>
      <title>如何迁移 Spring Cloud Eureka 注册体系至 k8s</title>
      <link>https://www.zeng.dev/post/20200428-eureka-multil-cluster-replica/</link>
      <pubDate>Tue, 28 Apr 2020 20:32:51 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/20200428-eureka-multil-cluster-replica/</guid>
      <description>优雅处理 Eureka 跨集群同步</description>
    </item>
    
    <item>
      <title>搭建树莓派 k8s 集群</title>
      <link>https://www.zeng.dev/post/20200405-raspberry-pi-cluster/</link>
      <pubDate>Sun, 05 Apr 2020 10:00:00 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/20200405-raspberry-pi-cluster/</guid>
      <description>自己动手，丰衣足食，利用开发板搭建本地 k8s 集群</description>
    </item>
    
    <item>
      <title>containerd 手动导入镜像</title>
      <link>https://www.zeng.dev/post/2020-containerd-image-import/</link>
      <pubDate>Sun, 05 Jan 2020 21:40:48 +0800</pubDate>
      
      <guid>https://www.zeng.dev/post/2020-containerd-image-import/</guid>
      <description>注意 containerd namespace 概念</description>
    </item>
    
  </channel>
</rss>
